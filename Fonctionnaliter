

MicroProd

Liste des differente fonctionnaliter que le framework/cms devra implementer:

- Tout les fichier de config en YAML
- Arboressence separent frontend est backend
- Possibiliter d'utiliser n'importe quel type de base de donner ( mongodb , cassendra , mysql) => ORM
- Possibiliter d'envoyer les app sur differrent serveur et de les separer en 2 partie frontend et backend.
- Possibiliter de developper chaque application avec un langage different.( combinaison front et back prevue)

- Possibiliter de realiser autre chose que des plateforme web ( software microservice (electron)
 , application (ionic , react) )

- l'associer a un soft / ou rajouter un plugin cappable de gerer la creation de container docker
			- generation de dockerfile automatique
			- generation de docker-compose automanique

- gestion de depandence indepandant pour chaque service (ex 1 package.json par service)

- gestion des test unitaire au niveaux de chaque service et de l'application enti√©re



###### Specification #########

###Commande###

microprod init ( init initialiser un nouveaux project)
microprod generate [name of service or application] # utilise le fichier de config du projet
microprod build (build tous les service)
microprod start ( demarer en mode dev dans des contenaire docker)
microprod stop ( stopper le mode dev dans des contenaire docker)
microprod deploy -targz|-docker ( genere les dockerfile(de prod) + le docker compose)

###Appel librairie###

microprod.model.NameEntity
// fonctionnaliter supperficiel //microprod.settings.NameSettingsfile
// fonctionnaliter supperficiel //microprod.storage.NameStorage